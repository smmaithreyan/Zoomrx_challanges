---
- name: Ansible Vault setup
  vars_files:
    - vault.yml
  hosts: database
  tasks:
    - name: Update apt Packages and Install MySQL
      become: true
      apt: name={{ item }} update_cache=yes cache_valid_time=3600 state=present
      with_items:
        - mysql-server
        - mysql
    - name: Start MySQL service
      become: true
      service:
        name: mysqld
        state: started
        enabled: true
    - name: variables initialize
      set_fact:
        login_user: '{{ login_user | default("root") }}'
        plugin: '{{ plugin | default("mysql_native_password") }}'
        host: '{{ host | default("localhost") }}'
        username: '{{ username | default("root") }}'
        login_password: '{{ login_password  }}'
        user: "{{ new_user }}"
        password: "{{ new_user_password }}"
    - name: Changing authentication method to mysql_native_password
      shell: |
        mysql -u {{ login_user }} -p{{ login_password }} -e "ALTER USER "{{ username }}"@"{{ host }}" IDENTIFIED WITH {{ plugin }} BY "{{ password }}""
    - name: Setting up MySQL root password
      become: true
      mysql_user:
        login_user: root
        login_password: "{{ login_password }}"
        user: root
        host_all: yes
        password: "{{ new_login_password }}"
    - name: Disabling remote root login
      mysql_user:
        login_user: root
        login_password: "{{ new_login_password }}"
        user: root
        host: "{{ host }}"
        state: absent
    - name: Removing anonymous users
      mysql_user:
        login_user: root
        login_password: "{{ new_login_password }}"
        user: ''
        host_all: yes
        state: absent
    - name: Removing test database
      mysql_db: 
        login_user: root
        login_password: "{{ new_login_password }}"
        db: test
        state: absent
    - name: Changing authentication method to auth_socket
      shell: |
        mysql -u {{ login_user }} -p{{ new_login_password }} -e "ALTER USER "{{ username }}"@"{{ host }}" IDENTIFIED WITH auth_socket"
    - name: Create New MySQL user and grant privilages
      block:
       - shell: >
            mysql -u {{ login_user }} -p{{ new_login_password }} -e "CREATE USER "{{ new_user }}"@"{{ host }}" IDENTIFIED BY "{{ new_user_password }}""
       - shell: >
            mysql -u {{ login_user }} -p{{ new_login_password }} -e "GRANT ALL PRIVILEGES ON *.* TO "{{ new_user }}"@"{{ host }}" WITH GRANT OPTION"
       - shell: >
            mysql -u {{ login_user }} -p"{{ new_login_password }}" -e "FLUSH PRIVILEGES"
    - name: Checking MySQL Service
      shell: "systemctl status mysql.service"
      register: result
      ignore_errors: yes
    - name: MySQL service Status     
      debug:
        var: result
