---
- name: Ansible Vault setup
  vars_files:
    - vault.yml
  hosts: database
  tasks:
    - name: Display MySQL active data directory
      mysql_query:
        login_user: root
        login_password: "{{ root_password }}"
        query: SELECT @@datadir;
        register: res
    - name: Query Results  
      debug:
        msg: "{{ res.query_result }}"
    - name: Stop MySQL service
      become: true
      service:
        name: mysql
        state: stopped
    - name: variables initialize
      set_fact:
        path: /var/lib/mysql
        mnt_path: /mnt/mysql-vol-dir
    - name: copying contents from source to directory
      become: true
      synchronize:
        src: "{{ path }}"
        dest: "{{ mnt_path }}"
        archive: yes
    - name: move mysql to bkp name
      become: true
      shell: "mv {{ path }} {{ path }}.bak"
    - name: Pointing to new data location
      become: true
      replace:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: "{{ path }}"
        replace: "{{ mnt_path }}"
    - name: Configuring AppArmor Access control rules
      become: true
      lineinfile:
        path: /etc/apparmor.d/tunables/alias
        line: "alias {{ path }} -> {{ mnt_path  }}"
        state: present
        create: yes
    - name: Restart Apparmor
      become: true
      service:
        name: apparmor
        state: restart
    - name: make data directory to avoid errors while starting MySQL service
      become: true
      shell: "if [! -d {{ path }}/mysql];then; mkdir {{ path }}/mysql -p;fi"
    - name: Start MySQL service
      become: true
      service:
        name: mysql
        state: started
    - name: Checking MySQL Service
      command: systemctl status mysql.service
      register: result
      ignore_errors: yes
    - name: MySQL service Status
      debug:
        var: result    
    - name: Display MySQL active data directory
      mysql_query:
        login_user: root
        login_password: "{{ root_password }}"
        query: SELECT @@datadir;
        register: res
    - name: Query Results     
      debug:
        msg: "{{ res.query_result }}"
    - name: Remove Bkp directory
      become: true
      shell: "rm -rf {{ path }}.bak"
    - name: Restart MySQL service
      become: true
      service:
        name: mysql
        state: restarted
    - name: Checking MySQL Service
      command: systemctl status mysql.service
      register: result
      ignore_errors: yes
    - name: MySQL service Status
      debug:
        var: result

